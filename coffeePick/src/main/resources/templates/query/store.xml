<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cp.user.store.dao.StoreDAO">

	<!-- 매장 정보 조회 쿼리문(원조) -->
	<select id="storeInfoRead" parameterType="store"
		resultType="store">
		select store_name, store_img, store_operate_hour,
		store_content, store_content_detail, store_addr from store where
		corp_id = #{corp_id}
	</select>

	
	<!-- 매장 정보 수정폼에서 입력란에 이전데이터를 보여주게 하기위한 조회 쿼리문 -->
	<select id="corpStoreDetail" parameterType="store"
		resultType="store">
		select store_name, store_img, store_operate_hour,
		store_content, store_content_detail, store_addr from store where
		store_id= #{store_id}
	</select>

	<!-- 매장 정보 등록 쿼리문 -->
	<insert id="storeInfoRegist" parameterType="store">
		insert into
		store(store_id, corp_id, store_phone ,store_name, store_img,
		store_operate_hour, store_content, store_content_detail, store_addr)
		values(CONCAT(#{corp_id}, '_store'),#{corp_id},#{store_phone}, #{store_name}, #{store_img},
		#{store_operate_hour}, #{store_content}, #{store_content_detail},
		#{store_addr})
	</insert>

	
	<!-- 영업하기 버튼제어 -->
	<update id="storeStatusY" parameterType="store">
		update store set store_status = 'Y' where store_id= #{store_id} 
	</update>
	
	<update id="storeStatusN" parameterType="store">
		update store set store_status = 'N' where store_id = #{store_id}
	</update>
	<!-- 매장 정보 수정 쿼리문 -->
	<update id="storeInfoUpdate" parameterType="store">
		update store set
		store_name = #{store_name}, store_img = #{store_img},
		store_operate_hour = #{store_operate_hour}, store_content = #{store_content},
		store_content_detail = #{store_content_detail}, store_phone = #{store_phone}, 
		store_addr = #{store_addr}, store_regdate = sysdate
		where store_id = #{store_id}
	</update>

	<!-- 매장 정보 삭제 쿼리문 -->
	<delete id="storeInfoDelete" parameterType="store">
		delete from store
		where corp_id = #{corp_id}
	</delete>

	<!-- 매장 검색 -->
	<sql id="storeSearch">
		<if test="search=='store_name'">
			<![CDATA[ store_name LIKE '%' || #{keyword} ||'%']]>
		</if>
		<if test="search=='store_addr'">
			<![CDATA[ store_addr LIKE '%' || #{keyword} ||'%']]>
		</if>
	</sql>

	<!-- 매장 리스트 조회 -->
	<select id="storeDetail" resultType="store">
		SELECT store_name, store_addr, store_phone, store_content,
		store_content_detail, store_operate_hour, store_operate_status,
		store_regdate, store_img, corp_id
		FROM store
		where store_id = #{store_id}
	</select>
	<!-- 매장 리스트 기본 조회(검색 처리 포함) -->

	<select id="storeList" resultType="store" parameterType="store">
    <![CDATA[
    select 
        store_id, store_name, store_addr, store_phone, store_content,
        store_content_detail, store_operate_hour, store_operate_status,
        store_regdate, store_img, corp_id
    from (
        select /*+ index_desc(store store_id_pk)*/
            rownum as rnum, store_id, store_name, store_addr, store_phone,
            store_content, store_content_detail, store_operate_hour,
            store_operate_status, store_regdate, store_img, corp_id
        from store
        where
    ]]>
		<trim prefix="(" suffix=") and" prefixOverrides="and">
			<!-- if문이 만족했을 때만 where절 사용 -->
			<include refid="storeSearch"></include>
		</trim>
    <![CDATA[
        rownum <= #{pageNum} * #{amount}
    ) storelist
    WHERE rnum > (#{pageNum}-1) * #{amount}
    ORDER BY store_id DESC
    ]]>
	</select>

	<!-- 전체 레코드 수 조회 -->
	<select id="storeListCnt" parameterType="store" resultType="int">
		select count(*) from store
		<trim prefix="where(" suffix=")">
			<include refid="storeSearch"></include>
		</trim>
	</select>


</mapper>